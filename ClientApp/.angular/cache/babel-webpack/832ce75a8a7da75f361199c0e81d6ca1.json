{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Projects\\\\NetCoreAngularTask\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet SignupComponent = class SignupComponent {\n  constructor(http, myservice, router, cryptojs) {\n    this.http = http;\n    this.myservice = myservice;\n    this.router = router;\n    this.cryptojs = cryptojs;\n    this.registerForm = new FormGroup({\n      Firstname: new FormControl(''),\n      Lastname: new FormControl(''),\n      Email: new FormControl('', Validators.required),\n      Password: new FormControl('', Validators.required),\n      Role: new FormControl(''),\n      Dob: new FormControl('')\n    });\n  }\n\n  ngOnInit() {}\n\n  onFormSubmit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.RegEmail = _this.registerForm.controls.Email.value;\n      _this.RegFirstname = _this.registerForm.controls.Firstname.value;\n      _this.RegLastname = _this.registerForm.controls.Lastname.value;\n      _this.RegRole = _this.registerForm.controls.Role.value;\n      _this.RegPassword = _this.registerForm.controls.Password.value;\n      _this.RegDob = _this.registerForm.controls.Dob.value;\n      console.log(CryptoJS.AES.encrypt(_this.RegPassword.trim(), _this.encPassword.trim()).toString());\n      yield _this.myservice.signup(_this.RegEmail, _this.RegPassword, _this.RegFirstname, _this.RegLastname, _this.RegDob, _this.RegRole).subscribe(res => {});\n      console.log(_this.registerForm);\n    })();\n  }\n\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"sources":["C:/Projects/NetCoreAngularTask/ClientApp/src/app/signup/signup.component.ts"],"names":["__decorate","Component","CryptoJS","FormControl","FormGroup","Validators","SignupComponent","constructor","http","myservice","router","cryptojs","registerForm","Firstname","Lastname","Email","required","Password","Role","Dob","ngOnInit","onFormSubmit","RegEmail","controls","value","RegFirstname","RegLastname","RegRole","RegPassword","RegDob","console","log","AES","encrypt","trim","encPassword","toString","signup","subscribe","res","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { FormControl, FormGroup, Validators, } from '@angular/forms';\r\nlet SignupComponent = class SignupComponent {\r\n    constructor(http, myservice, router, cryptojs) {\r\n        this.http = http;\r\n        this.myservice = myservice;\r\n        this.router = router;\r\n        this.cryptojs = cryptojs;\r\n        this.registerForm = new FormGroup({\r\n            Firstname: new FormControl(''),\r\n            Lastname: new FormControl(''),\r\n            Email: new FormControl('', Validators.required),\r\n            Password: new FormControl('', Validators.required),\r\n            Role: new FormControl(''),\r\n            Dob: new FormControl('')\r\n        });\r\n    }\r\n    ngOnInit() { }\r\n    async onFormSubmit() {\r\n        this.RegEmail = this.registerForm.controls.Email.value;\r\n        this.RegFirstname = this.registerForm.controls.Firstname.value;\r\n        this.RegLastname = this.registerForm.controls.Lastname.value;\r\n        this.RegRole = this.registerForm.controls.Role.value;\r\n        this.RegPassword = this.registerForm.controls.Password.value;\r\n        this.RegDob = this.registerForm.controls.Dob.value;\r\n        console.log(CryptoJS.AES.encrypt(this.RegPassword.trim(), this.encPassword.trim()).toString());\r\n        await this.myservice.signup(this.RegEmail, this.RegPassword, this.RegFirstname, this.RegLastname, this.RegDob, this.RegRole).subscribe(res => { });\r\n        console.log(this.registerForm);\r\n    }\r\n};\r\nSignupComponent = __decorate([\r\n    Component({\r\n        selector: 'app-signup',\r\n        templateUrl: './signup.component.html',\r\n        styleUrls: ['./signup.component.css'],\r\n    })\r\n], SignupComponent);\r\nexport { SignupComponent };\r\n"]},"metadata":{},"sourceType":"module"}